@*@model MvcGarageGroup.Models.ParkedVehicle*@
@model Tuple<MvcGarageGroup.Models.ParkedVehicle,MvcGarageGroup.Models.Owner,MvcGarageGroup.Models.Vehicle>


@{
    ViewBag.Title = "View";
    AjaxOptions options = new AjaxOptions { };
}

<h2>@ViewBag.Message</h2>
@using (Ajax.BeginForm("Save", "ParkVehicle", options, htmlAttributes: new { @id = "update-form" }))
{
<div class="InputForm">
 
        <div class="inputfields">
            <div class="inputLabel">
                @Html.LabelFor(model => model.Item1.VehicleID)
            </div>
            <div class="inputDropDown">
                @Html.DropDownListFor(model => model.Item1.VehicleID, ((List<MvcGarageGroup.Models.VehicleListItem>)ViewBag.ToComboV).Select(item => new SelectListItem
            {
                Value = item.VehicleID.ToString(),
                Text = item.VehicleAndType.ToString(),
            }),
            new { @class = "inputDropDownList" })

            </div>
            <div class="inputfields">

                <div class="inputLabel">
                    @Html.LabelFor(model => model.Item3.LicencePlate)
                </div>

                <div class="inputTextBox">
                    @Html.TextBoxFor(model => model.Item3.LicencePlate)
                </div>
                <div class="inputLabel">
                    @Html.LabelFor(model => model.Item3.Color)
                </div>

                <div class="inputTextBox">
                    @Html.TextBoxFor(model => model.Item3.Color)
                </div>
                <div class="inputLabel">
                    @Html.LabelFor(model => model.Item3.VehicleTypeID)
                </div>

                <div class="inputDropDown">
                    @Html.DropDownListFor(model => model.Item3.VehicleTypeID,
                                            EnumHelper.GetSelectList(typeof(MvcGarage.CommonFunctions.Enumerators.VehicleType)),
                                            new { @class = "inputDropDownList" })
                </div>

            </div>

            <div class="inputLabel">
                @Html.LabelFor(model => model.Item1.OwnerID)
            </div>
            <div class="inputDropDown">
                @Html.DropDownListFor(model => model.Item1.OwnerID, ((List<MvcGarageGroup.Models.OwnerListItem>)ViewBag.ToComboOwner).Select(item => new SelectListItem
                {
                    Value = item.OwnerID.ToString(),
                    Text = item.SSNAndName.ToString(),
                }),
                new { @class = "inputDropDownList" })
            </div>
        </div>
        @*ViewBag.OwnerModel = new Owner();
            ViewBag.VehicleModel = new Vehicle();*@

        <div class="inputfields">

            <div class="inputLabel">
                @Html.LabelFor(model => model.Item2.SSN)
            </div>

            <div class="inputTextBox">
                @Html.TextBoxFor(model => model.Item2.SSN)
            </div>
            <div class="inputLabel">
                @Html.LabelFor(model => model.Item2.Name)
            </div>

            <div class="inputTextBox">
                @Html.TextBoxFor(model => model.Item2.Name)
            </div>

        </div>

        <div class="inputfields">

            <div class="inputLabel">
                @Html.LabelFor(model => model.Item1.ParkingSpotID)
            </div>

            <div class="inputDropDown">
                @*@Html.DropDownListFor(model => model.Item1.ParkingSpotID,
                                            EnumHelper.GetSelectList(typeof(MvcGarage.CommonFunctions.Enumerators.ParkingSpot)),
                                            new { @class = "inputDropDownList" })*@
                @Html.DropDownListFor(model => model.Item1.ParkingSpotID, ((List<MvcGarageGroup.Models.ParkingSpotListItem>)ViewBag.ToVacantParkingSpots).Select(item => new SelectListItem
                {
                    Value = item.ParkingSpotID.ToString(),
                    Text = item.Name.ToString(),
                }),
                new { @class = "inputDropDownList" })

   
            </div>

            <div class="inputLabel">
                @Html.LabelFor(model => model.Item1.StartTime)
            </div>

            <div class="inputTextBox">
                @Html.TextBoxFor(model => model.Item1.StartTime, new { Value = DateTime.Now })
            </div>

            <div class="inputLabel">
                @Html.LabelFor(model => model.Item1.StopTime)
            </div>

            <div class="inputTextBox">
                @Html.TextBoxFor(model => model.Item1.StopTime, new { Value = DateTime.Now.AddHours(1) })
            </div>


        </div>


    <div class="CommitField">
        <button type="submit" class="button">Save</button>
     </div>

            @*<div class="CommitField">
                    @Html.ActionLink("Save", "Save", "ParkVehicle", new { @class = "btn btn-primary", @style = "color:white" })

                </div>*@
   
       </div>
   }

