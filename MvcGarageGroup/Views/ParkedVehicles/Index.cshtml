@model IEnumerable<MvcGarageGroup.Models.ParkedVehicle>

<h2>Our Garage</h2>

@{
    ViewBag.Title = "View";
    AjaxOptions options = new AjaxOptions { };
    var searchForm = new MvcGarageGroup.Models.SearchForm();
    searchForm.ViewName = "Index";
}

<h2>@ViewBag.Message</h2>

<h4>@ViewBag.SaveReultMessage</h4>

@*@using (Ajax.BeginForm("Search", "ParkedVehicle", options, htmlAttributes: new { @id = "update-form" }))
{
    <div class="inputfields">

        @Html.LabelFor(model => model.SearchForm.LicensePlate)
        @Html.LabelFor(model => model.SearchForm.LicensePlate)
    </div>
}*@
@Html.Partial("SearchFormPartialView", @searchForm);

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ParkingSpotID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Vehicle.LicencePlate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Vehicle.Color)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Present)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StartTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StopTime)
                </th>
                <th>
                    Overdue
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ParkingSpotID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Vehicle.LicencePlate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Vehicle.Color)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Present)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StopTime)
                    </td>
                    <td>
                        @{

                string result = "";
            var overdue = (DateTime.Now - (DateTime)item.StopTime).TotalHours;
            if (overdue > 0) { result = Math.Round(overdue).ToString(); }
                        }
                        @result
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.ParkedVehicleID }) | &nbsp;
                        @Html.ActionLink("Info", "Details", new { id=item.ParkedVehicleID }) | &nbsp;
                        @Html.ActionLink("Unpark", "Delete", new { id = item.ParkedVehicleID })
                    </td>
                </tr>
}

        </table>
